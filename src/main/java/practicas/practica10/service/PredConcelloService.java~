package practicas.practica10.service;

import com.google.gson.*;
import practicas.practica10.model.*;
import practicas.practica10.service.dto.TemperaturaMedia;

import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

public class PredConcelloService {

    public void escribirTemperaturaMediaEnFichero(String inputFilePath, String outputfilePath) throws IOException {
        TemperaturaMedia temperaturaMedia = getTemperaturaMediaSemanal(inputFilePath);

        JsonObject jsonObject = new JsonObject();
        jsonObject.addProperty("tmax_promedio", temperaturaMedia.getTmax());
        jsonObject.addProperty("tmin_promedio", temperaturaMedia.getTmi());

        try (FileWriter fileWriter = new FileWriter(outputfilePath)) {
            fileWriter.write(new Gson().toJson(jsonObject));
            fileWriter.flush();
        }
    }

    public TemperaturaMedia getTemperaturaMediaSemanal(String filePath) throws IOException {
        PredConcello predConcello = getPredConcelloFromJsonFile(filePath);
        List<PredDiaConcello> listaPredDiaConcello = predConcello.getListaPredDiaConcello();

        if (listaPredDiaConcello == null || listaPredDiaConcello.isEmpty()) {
            throw new IllegalArgumentException("La lista de predicciones está vacía o es nula.");
        }

        double sumaTmax = 0;
        double sumaTmin = 0;
        int totalDias = listaPredDiaConcello.size();

        for (PredDiaConcello predDia : listaPredDiaConcello) {
            sumaTmax += predDia.gettMax();
            sumaTmin += predDia.gettMin();
        }

        return new TemperaturaMedia(sumaTmax / totalDias, sumaTmin / totalDias);
    }

    public PredConcello getPredConcelloFromJsonFile(String filePath) throws IOException {
        throw new UnsupportedOperationException("A completar por el alumno");
    }
}
